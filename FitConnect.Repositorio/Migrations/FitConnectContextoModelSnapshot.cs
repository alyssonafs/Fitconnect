// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FitConnect.Repositorio.Migrations
{
    [DbContext(typeof(FitConnectContexto))]
    partial class FitConnectContextoModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("FitConnect.Dominio.Entidades.Exercicio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit")
                        .HasColumnName("Ativo");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Descricao");

                    b.Property<int>("GrupoMuscular")
                        .HasColumnType("int")
                        .HasColumnName("GrupoMuscular");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Nome");

                    b.Property<string>("VideoURL")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("VideoURL");

                    b.HasKey("Id");

                    b.ToTable("Exercicios", (string)null);
                });

            modelBuilder.Entity("FitConnect.Dominio.Entidades.ExercicioTreino", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ExercicioId")
                        .HasColumnType("int")
                        .HasColumnName("ExercicioId");

                    b.Property<string>("Serie")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Serie");

                    b.Property<int>("TreinoId")
                        .HasColumnType("int")
                        .HasColumnName("TreinoId");

                    b.HasKey("Id");

                    b.HasIndex("ExercicioId");

                    b.HasIndex("TreinoId");

                    b.ToTable("ExerciciosTreinos", (string)null);
                });

            modelBuilder.Entity("FitConnect.Dominio.Entidades.Treino", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit")
                        .HasColumnName("Ativo");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Nome");

                    b.Property<int>("PersonalId")
                        .HasColumnType("int")
                        .HasColumnName("PersonalId");

                    b.HasKey("Id");

                    b.HasIndex("PersonalId");

                    b.ToTable("Treinos", (string)null);
                });

            modelBuilder.Entity("FitConnect.Dominio.Entidades.TreinoCompartilhado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AlunoId")
                        .HasColumnType("int")
                        .HasColumnName("AlunoId");

                    b.Property<DateTime>("DataCompartilhamento")
                        .HasColumnType("datetime2")
                        .HasColumnName("DataCompartilhamento");

                    b.Property<int>("TreinoId")
                        .HasColumnType("int")
                        .HasColumnName("TreinoId");

                    b.HasKey("Id");

                    b.HasIndex("AlunoId");

                    b.HasIndex("TreinoId");

                    b.ToTable("TreinosCompartilhados", (string)null);
                });

            modelBuilder.Entity("FitConnect.Dominio.Entidades.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<double>("Altura")
                        .HasColumnType("float")
                        .HasColumnName("Altura");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit")
                        .HasColumnName("Ativo");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime2")
                        .HasColumnName("DataNascimento");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Email");

                    b.Property<int>("Genero")
                        .HasColumnType("int")
                        .HasColumnName("Genero");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Nome");

                    b.Property<double>("Peso")
                        .HasColumnType("float")
                        .HasColumnName("Peso");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Senha");

                    b.Property<int>("TipoUsuario")
                        .HasColumnType("int")
                        .HasColumnName("TipoUsuario");

                    b.HasKey("Id");

                    b.ToTable("Usuarios", (string)null);
                });

            modelBuilder.Entity("FitConnect.Dominio.Entidades.ExercicioTreino", b =>
                {
                    b.HasOne("FitConnect.Dominio.Entidades.Exercicio", "Exercicio")
                        .WithMany("ExerciciosTreino")
                        .HasForeignKey("ExercicioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FitConnect.Dominio.Entidades.Treino", "Treino")
                        .WithMany("ExerciciosTreino")
                        .HasForeignKey("TreinoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Exercicio");

                    b.Navigation("Treino");
                });

            modelBuilder.Entity("FitConnect.Dominio.Entidades.Treino", b =>
                {
                    b.HasOne("FitConnect.Dominio.Entidades.Usuario", "Personal")
                        .WithMany("Treinos")
                        .HasForeignKey("PersonalId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Personal");
                });

            modelBuilder.Entity("FitConnect.Dominio.Entidades.TreinoCompartilhado", b =>
                {
                    b.HasOne("FitConnect.Dominio.Entidades.Usuario", "Usuario")
                        .WithMany("TreinosCompartilhados")
                        .HasForeignKey("AlunoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FitConnect.Dominio.Entidades.Treino", "Treino")
                        .WithMany("TreinosCompartilhados")
                        .HasForeignKey("TreinoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Treino");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("FitConnect.Dominio.Entidades.Exercicio", b =>
                {
                    b.Navigation("ExerciciosTreino");
                });

            modelBuilder.Entity("FitConnect.Dominio.Entidades.Treino", b =>
                {
                    b.Navigation("ExerciciosTreino");

                    b.Navigation("TreinosCompartilhados");
                });

            modelBuilder.Entity("FitConnect.Dominio.Entidades.Usuario", b =>
                {
                    b.Navigation("Treinos");

                    b.Navigation("TreinosCompartilhados");
                });
#pragma warning restore 612, 618
        }
    }
}
