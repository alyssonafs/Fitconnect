// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FitConnect.Repositorio.Migrations
{
    [DbContext(typeof(FitConnectContexto))]
    [Migration("20250721021708_AddUsuarioIdNaProcedure")]
    partial class AddUsuarioIdNaProcedure
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("FitConnect.Dominio.Entidades.Exercicio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit")
                        .HasColumnName("Ativo");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Descricao");

                    b.Property<int>("GrupoMuscular")
                        .HasColumnType("int")
                        .HasColumnName("GrupoMuscular");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Nome");

                    b.Property<string>("VideoURL")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("VideoURL");

                    b.HasKey("Id");

                    b.ToTable("Exercicios", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Ativo = true,
                            Descricao = "Exercício clássico para trabalhar a parte central do peitoral.",
                            GrupoMuscular = 0,
                            Nome = "Supino Reto com Barra",
                            VideoURL = "https://www.youtube.com/embed/rT7DgCr-3pg"
                        },
                        new
                        {
                            Id = 2,
                            Ativo = true,
                            Descricao = "Foco no peitoral superior com maior amplitude.",
                            GrupoMuscular = 0,
                            Nome = "Supino Inclinado com Halteres",
                            VideoURL = "https://www.youtube.com/embed/8iPEnn-ltC8"
                        },
                        new
                        {
                            Id = 3,
                            Ativo = true,
                            Descricao = "Exercício de isolamento para o peitoral.",
                            GrupoMuscular = 0,
                            Nome = "Crossover no Cabo",
                            VideoURL = "https://www.youtube.com/embed/taI4XduLpTk"
                        },
                        new
                        {
                            Id = 4,
                            Ativo = true,
                            Descricao = "Trabalha o latíssimo do dorso.",
                            GrupoMuscular = 1,
                            Nome = "Puxada Frente na Polia Alta",
                            VideoURL = "https://www.youtube.com/embed/CAwf7n6Luuc"
                        },
                        new
                        {
                            Id = 5,
                            Ativo = true,
                            Descricao = "Foco na parte média das costas.",
                            GrupoMuscular = 1,
                            Nome = "Remada Curvada com Barra",
                            VideoURL = "https://www.youtube.com/embed/vT2GjY_Umpw"
                        },
                        new
                        {
                            Id = 6,
                            Ativo = true,
                            Descricao = "Trabalha espessura do dorso.",
                            GrupoMuscular = 1,
                            Nome = "Remada Baixa com Triângulo",
                            VideoURL = "https://www.youtube.com/embed/roCP6wCXPqo"
                        },
                        new
                        {
                            Id = 7,
                            Ativo = true,
                            Descricao = "Exercício básico para bíceps.",
                            GrupoMuscular = 2,
                            Nome = "Rosca Direta com Barra",
                            VideoURL = "https://www.youtube.com/embed/kwG2ipFRgfo"
                        },
                        new
                        {
                            Id = 8,
                            Ativo = true,
                            Descricao = "Movimento unilateral para foco e controle.",
                            GrupoMuscular = 2,
                            Nome = "Rosca Alternada com Halteres",
                            VideoURL = "https://www.youtube.com/embed/av7-8igSXTs"
                        },
                        new
                        {
                            Id = 9,
                            Ativo = true,
                            Descricao = "Trabalha braquiorradial e antebraço.",
                            GrupoMuscular = 2,
                            Nome = "Rosca Martelo",
                            VideoURL = "https://www.youtube.com/embed/zC3nLlEvin4"
                        },
                        new
                        {
                            Id = 10,
                            Ativo = true,
                            Descricao = "Isolamento do tríceps com polia.",
                            GrupoMuscular = 3,
                            Nome = "Tríceps Pulley",
                            VideoURL = "https://www.youtube.com/embed/I80Xx7pA8jQ"
                        },
                        new
                        {
                            Id = 11,
                            Ativo = true,
                            Descricao = "Trabalha todas as cabeças do tríceps.",
                            GrupoMuscular = 3,
                            Nome = "Tríceps Testa com Barra",
                            VideoURL = "https://www.youtube.com/embed/d_KZxkY_0cM"
                        },
                        new
                        {
                            Id = 12,
                            Ativo = true,
                            Descricao = "Tríceps com peso corporal.",
                            GrupoMuscular = 3,
                            Nome = "Mergulho entre Bancos",
                            VideoURL = "https://www.youtube.com/embed/6kALZikXxLc"
                        },
                        new
                        {
                            Id = 13,
                            Ativo = true,
                            Descricao = "Foco no deltoide anterior e lateral.",
                            GrupoMuscular = 4,
                            Nome = "Desenvolvimento com Halteres",
                            VideoURL = "https://www.youtube.com/embed/qEwKCR5JCog"
                        },
                        new
                        {
                            Id = 14,
                            Ativo = true,
                            Descricao = "Isolamento para deltoide lateral.",
                            GrupoMuscular = 4,
                            Nome = "Elevação Lateral",
                            VideoURL = "https://www.youtube.com/embed/3VcKaXpzqRo"
                        },
                        new
                        {
                            Id = 15,
                            Ativo = true,
                            Descricao = "Foco no deltoide anterior.",
                            GrupoMuscular = 4,
                            Nome = "Elevação Frontal com Halteres",
                            VideoURL = "https://www.youtube.com/embed/-t7fuZ0KhDA"
                        },
                        new
                        {
                            Id = 16,
                            Ativo = true,
                            Descricao = "Exercício composto para pernas e glúteos.",
                            GrupoMuscular = 5,
                            Nome = "Agachamento Livre",
                            VideoURL = "https://www.youtube.com/embed/UXJrBgI2RxA"
                        },
                        new
                        {
                            Id = 17,
                            Ativo = true,
                            Descricao = "Trabalha quadríceps, glúteos e posterior.",
                            GrupoMuscular = 5,
                            Nome = "Leg Press 45°",
                            VideoURL = "https://www.youtube.com/embed/IZxyjW7MPJQ"
                        },
                        new
                        {
                            Id = 18,
                            Ativo = true,
                            Descricao = "Isolamento para quadríceps.",
                            GrupoMuscular = 5,
                            Nome = "Cadeira Extensora",
                            VideoURL = "https://www.youtube.com/embed/YyvSfVjQeL0"
                        },
                        new
                        {
                            Id = 19,
                            Ativo = true,
                            Descricao = "Movimento básico para abdominal superior.",
                            GrupoMuscular = 6,
                            Nome = "Abdominal Supra no Solo",
                            VideoURL = "https://www.youtube.com/embed/5ER5Of4MOPI"
                        },
                        new
                        {
                            Id = 20,
                            Ativo = true,
                            Descricao = "Exercício isométrico para core.",
                            GrupoMuscular = 6,
                            Nome = "Prancha Abdominal",
                            VideoURL = "https://www.youtube.com/embed/pSHjTRCQxIw"
                        },
                        new
                        {
                            Id = 21,
                            Ativo = true,
                            Descricao = "Trabalha principalmente o abdômen inferior.",
                            GrupoMuscular = 6,
                            Nome = "Elevação de Pernas na Barra Fixa",
                            VideoURL = "https://www.youtube.com/embed/l4kQd9eWclE"
                        });
                });

            modelBuilder.Entity("FitConnect.Dominio.Entidades.ExercicioTreino", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ExercicioId")
                        .HasColumnType("int")
                        .HasColumnName("ExercicioId");

                    b.Property<string>("Serie")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Serie");

                    b.Property<int>("TreinoId")
                        .HasColumnType("int")
                        .HasColumnName("TreinoId");

                    b.HasKey("Id");

                    b.HasIndex("ExercicioId");

                    b.HasIndex("TreinoId");

                    b.ToTable("ExerciciosTreinos", (string)null);
                });

            modelBuilder.Entity("FitConnect.Dominio.Entidades.Treino", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit")
                        .HasColumnName("Ativo");

                    b.Property<bool>("GeradoPorIa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("GeradoPorIa");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Nome");

                    b.Property<int>("PersonalId")
                        .HasColumnType("int")
                        .HasColumnName("PersonalId");

                    b.HasKey("Id");

                    b.HasIndex("PersonalId");

                    b.ToTable("Treinos", (string)null);
                });

            modelBuilder.Entity("FitConnect.Dominio.Entidades.TreinoCompartilhado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AlunoId")
                        .HasColumnType("int")
                        .HasColumnName("AlunoId");

                    b.Property<DateTime>("DataCompartilhamento")
                        .HasColumnType("datetime2")
                        .HasColumnName("DataCompartilhamento");

                    b.Property<int>("TreinoId")
                        .HasColumnType("int")
                        .HasColumnName("TreinoId");

                    b.HasKey("Id");

                    b.HasIndex("AlunoId");

                    b.HasIndex("TreinoId");

                    b.ToTable("TreinosCompartilhados", (string)null);
                });

            modelBuilder.Entity("FitConnect.Dominio.Entidades.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<double>("Altura")
                        .HasColumnType("float")
                        .HasColumnName("Altura");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit")
                        .HasColumnName("Ativo");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime2")
                        .HasColumnName("DataNascimento");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Email");

                    b.Property<int>("Genero")
                        .HasColumnType("int")
                        .HasColumnName("Genero");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Nome");

                    b.Property<double>("Peso")
                        .HasColumnType("float")
                        .HasColumnName("Peso");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Senha");

                    b.Property<int>("TipoUsuario")
                        .HasColumnType("int")
                        .HasColumnName("TipoUsuario");

                    b.HasKey("Id");

                    b.ToTable("Usuarios", (string)null);
                });

            modelBuilder.Entity("FitConnect.Dominio.Entidades.ExercicioTreino", b =>
                {
                    b.HasOne("FitConnect.Dominio.Entidades.Exercicio", "Exercicio")
                        .WithMany("ExerciciosTreino")
                        .HasForeignKey("ExercicioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FitConnect.Dominio.Entidades.Treino", "Treino")
                        .WithMany("ExerciciosTreino")
                        .HasForeignKey("TreinoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Exercicio");

                    b.Navigation("Treino");
                });

            modelBuilder.Entity("FitConnect.Dominio.Entidades.Treino", b =>
                {
                    b.HasOne("FitConnect.Dominio.Entidades.Usuario", "Personal")
                        .WithMany("Treinos")
                        .HasForeignKey("PersonalId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Personal");
                });

            modelBuilder.Entity("FitConnect.Dominio.Entidades.TreinoCompartilhado", b =>
                {
                    b.HasOne("FitConnect.Dominio.Entidades.Usuario", "Usuario")
                        .WithMany("TreinosCompartilhados")
                        .HasForeignKey("AlunoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FitConnect.Dominio.Entidades.Treino", "Treino")
                        .WithMany("TreinosCompartilhados")
                        .HasForeignKey("TreinoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Treino");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("FitConnect.Dominio.Entidades.Exercicio", b =>
                {
                    b.Navigation("ExerciciosTreino");
                });

            modelBuilder.Entity("FitConnect.Dominio.Entidades.Treino", b =>
                {
                    b.Navigation("ExerciciosTreino");

                    b.Navigation("TreinosCompartilhados");
                });

            modelBuilder.Entity("FitConnect.Dominio.Entidades.Usuario", b =>
                {
                    b.Navigation("Treinos");

                    b.Navigation("TreinosCompartilhados");
                });
#pragma warning restore 612, 618
        }
    }
}
